#
# Copyright (c) 2007, Adam Dunkels.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. The name of the author may not be used to endorse or promote
#    products derived from this software without specific prior
#    written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS
# OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
# GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# This file is part of the Contiki operating system.
#
# Author: Oliver Schmidt <ol.sc@web.de>
#

.SUFFIXES:

TARGET_LIBFILES = /lib/w32api/libws2_32.a /lib/w32api/libiphlpapi.a

CONTIKI_TARGET_DIRS = . cfs ctk loader
CONTIKI_TARGET_SOURCEFILES = contiki-main.c clock.c cfs-win32-dir.c ctk-console.c

CONTIKI_SOURCEFILES += $(CTK) cfs-posix.c ctk-conio.c wpcap.c wpcap-drv.c \
                       $(CONTIKI_TARGET_SOURCEFILES)

MODULES += core/ctk core/net/ip core/net/ipv4 core/net/ipv6

# Define the CPU directory

CONTIKI_CPU = $(CONTIKI)/cpu/native
include $(CONTIKI)/cpu/native/Makefile.native

ifdef PLATFORM_BUILD
  CONTIKI_TARGET_SOURCEFILES += dll-loader.c
  CFLAGS += -DPLATFORM_BUILD -DWITH_GUI -DWITH_LOADER_ARCH -DAUTOSTART_ENABLE
  LDFLAGS += -Wl,--out-implib=contiki-main.$(TARGET).a \
             -u _cfs_open -u _cfs_opendir -u _uiplib_ip4addrconv
  LINKFLAGS = -implib:contiki-main.$(TARGET).a $(OBJECTDIR)/program-handler.o \
              -include:_cfs_open -include:_cfs_opendir -include:_uiplib_ip4addrconv
else
  CONTIKI_TARGET_SOURCEFILES += unload.c
endif

# Set a target-specific variable value

${foreach PRG,$(PRGS),${addprefix $(OBJECTDIR)/, \
                      $(${call appname,$(PRG)_src:.c=.o})}}: CFLAGS += -D_USRDLL

# Generate the module-link prerequisites

define prg_template
$(1).prg: $${addprefix $$(OBJECTDIR)/,$$($(2)_src:.c=.o)}
endef
define dsc_template
$(1).dsc: $${addprefix $$(OBJECTDIR)/,$$($(2)_dsc:.c=.o)}
endef
${foreach PRG,$(PRGS),${eval ${call prg_template,$(PRG),${call appname,$(PRG)}}}}
${foreach DSC,$(DSCS),${eval ${call dsc_template,$(DSC),${call appname,$(DSC)}}}}

# Generic module-link rules, no prerequisites here

$(PRGS:=.prg) $(DSCS:=.dsc):
	$(TRACE_LD)
ifdef VCINSTALLDIR
	$(Q)link -nologo -debug -dll $^ contiki-main.$(TARGET).a -out:$@
else
	$(Q)$(LD) -shared $^ contiki-main.$(TARGET).a -o $@
endif
