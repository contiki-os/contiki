/*
 * Atheros CARL9170 driver
 *
 * Copyright 2008, Johannes Berg <johannes@sipsolutions.net>
 * Copyright 2009, 2010, Christian Lamparter <chunkeey@googlemail.com>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; see the file COPYING.  If not, see
 * http://www.gnu.org/licenses/.
 *
 * This file incorporates work covered by the following copyright and
 * permission notice:
 *    Copyright (c) 2007-2008 Atheros Communications, Inc.
 *
 *    Permission to use, copy, modify, and/or distribute this software for any
 *    purpose with or without fee is hereby granted, provided that the above
 *    copyright notice and this permission notice appear in all copies.
 *
 *    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 *    WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 *    MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 *    ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 *    WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 *    ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 *    OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */
#include "ar9170.h"
#include "cfg80211.h"
#include "nl80211.h"
#include "compiler.h"


#ifndef AR9170_PHY_H_
#define AR9170_PHY_H_

#define ARRAY_SIZE(x) (sizeof(x) / sizeof((x)[0]))

#define	AR9170_PHY_REG_BASE			(0x1bc000 + 0x9800)
#define	AR9170_PHY_REG(_n)			(AR9170_PHY_REG_BASE + \
((_n) << 2))

#define	AR9170_PHY_REG_TEST			(AR9170_PHY_REG_BASE + 0x0000)
#define		AR9170_PHY_TEST_AGC_CLR			0x10000000
#define		AR9170_PHY_TEST_RFSILENT_BB		0x00002000

#define	AR9170_PHY_REG_TURBO			(AR9170_PHY_REG_BASE + 0x0004)
#define		AR9170_PHY_TURBO_FC_TURBO_MODE		0x00000001
#define		AR9170_PHY_TURBO_FC_TURBO_SHORT		0x00000002
#define		AR9170_PHY_TURBO_FC_DYN2040_EN		0x00000004
#define		AR9170_PHY_TURBO_FC_DYN2040_PRI_ONLY	0x00000008
#define		AR9170_PHY_TURBO_FC_DYN2040_PRI_CH	0x00000010
/* For 25 MHz channel spacing -- not used but supported by hw */
#define		AR9170_PHY_TURBO_FC_DYN2040_EXT_CH	0x00000020
#define		AR9170_PHY_TURBO_FC_HT_EN		0x00000040
#define		AR9170_PHY_TURBO_FC_SHORT_GI_40		0x00000080
#define		AR9170_PHY_TURBO_FC_WALSH		0x00000100
#define		AR9170_PHY_TURBO_FC_SINGLE_HT_LTF1	0x00000200
#define		AR9170_PHY_TURBO_FC_ENABLE_DAC_FIFO	0x00000800

#define	AR9170_PHY_REG_TEST2			(AR9170_PHY_REG_BASE + 0x0008)

#define	AR9170_PHY_REG_TIMING2			(AR9170_PHY_REG_BASE + 0x0010)
#define		AR9170_PHY_TIMING2_USE_FORCE		0x00001000
#define		AR9170_PHY_TIMING2_FORCE		0x00000fff
#define		AR9170_PHY_TIMING2_FORCE_S			 0

#define	AR9170_PHY_REG_TIMING3			(AR9170_PHY_REG_BASE + 0x0014)
#define		AR9170_PHY_TIMING3_DSC_EXP		0x0001e000
#define		AR9170_PHY_TIMING3_DSC_EXP_S		13
#define		AR9170_PHY_TIMING3_DSC_MAN		0xfffe0000
#define		AR9170_PHY_TIMING3_DSC_MAN_S		17

#define	AR9170_PHY_REG_CHIP_ID			(AR9170_PHY_REG_BASE + 0x0018)
#define		AR9170_PHY_CHIP_ID_REV_0		0x80
#define		AR9170_PHY_CHIP_ID_REV_1		0x81
#define		AR9170_PHY_CHIP_ID_9160_REV_0		0xb0

#define	AR9170_PHY_REG_ACTIVE			(AR9170_PHY_REG_BASE + 0x001c)
#define		AR9170_PHY_ACTIVE_EN			0x00000001
#define		AR9170_PHY_ACTIVE_DIS			0x00000000

#define	AR9170_PHY_REG_RF_CTL2			(AR9170_PHY_REG_BASE + 0x0024)
#define		AR9170_PHY_RF_CTL2_TX_END_DATA_START	0x000000ff
#define		AR9170_PHY_RF_CTL2_TX_END_DATA_START_S	0
#define		AR9170_PHY_RF_CTL2_TX_END_PA_ON		0x0000ff00
#define		AR9170_PHY_RF_CTL2_TX_END_PA_ON_S	8

#define	AR9170_PHY_REG_RF_CTL3                  (AR9170_PHY_REG_BASE + 0x0028)
#define		AR9170_PHY_RF_CTL3_TX_END_TO_A2_RX_ON	0x00ff0000
#define		AR9170_PHY_RF_CTL3_TX_END_TO_A2_RX_ON_S	16

#define	AR9170_PHY_REG_ADC_CTL			(AR9170_PHY_REG_BASE + 0x002c)
#define		AR9170_PHY_ADC_CTL_OFF_INBUFGAIN	0x00000003
#define		AR9170_PHY_ADC_CTL_OFF_INBUFGAIN_S	0
#define		AR9170_PHY_ADC_CTL_OFF_PWDDAC		0x00002000
#define		AR9170_PHY_ADC_CTL_OFF_PWDBANDGAP	0x00004000
#define		AR9170_PHY_ADC_CTL_OFF_PWDADC		0x00008000
#define		AR9170_PHY_ADC_CTL_ON_INBUFGAIN		0x00030000
#define		AR9170_PHY_ADC_CTL_ON_INBUFGAIN_S	16

#define	AR9170_PHY_REG_ADC_SERIAL_CTL		(AR9170_PHY_REG_BASE + 0x0030)
#define		AR9170_PHY_ADC_SCTL_SEL_INTERNAL_ADDAC	0x00000000
#define		AR9170_PHY_ADC_SCTL_SEL_EXTERNAL_RADIO	0x00000001

#define	AR9170_PHY_REG_RF_CTL4			(AR9170_PHY_REG_BASE + 0x0034)
#define		AR9170_PHY_RF_CTL4_TX_END_XPAB_OFF	0xff000000
#define		AR9170_PHY_RF_CTL4_TX_END_XPAB_OFF_S	24
#define		AR9170_PHY_RF_CTL4_TX_END_XPAA_OFF	0x00ff0000
#define		AR9170_PHY_RF_CTL4_TX_END_XPAA_OFF_S	16
#define		AR9170_PHY_RF_CTL4_FRAME_XPAB_ON	0x0000ff00
#define		AR9170_PHY_RF_CTL4_FRAME_XPAB_ON_S	8
#define		AR9170_PHY_RF_CTL4_FRAME_XPAA_ON	0x000000ff
#define		AR9170_PHY_RF_CTL4_FRAME_XPAA_ON_S	0

#define	AR9170_PHY_REG_TSTDAC_CONST		(AR9170_PHY_REG_BASE + 0x003c)

#define	AR9170_PHY_REG_SETTLING			(AR9170_PHY_REG_BASE + 0x0044)
#define		AR9170_PHY_SETTLING_SWITCH		0x00003f80
#define		AR9170_PHY_SETTLING_SWITCH_S		7

#define	AR9170_PHY_REG_RXGAIN			(AR9170_PHY_REG_BASE + 0x0048)
#define	AR9170_PHY_REG_RXGAIN_CHAIN_2		(AR9170_PHY_REG_BASE + 0x2048)
#define		AR9170_PHY_RXGAIN_TXRX_ATTEN		0x0003f000
#define		AR9170_PHY_RXGAIN_TXRX_ATTEN_S		12
#define		AR9170_PHY_RXGAIN_TXRX_RF_MAX		0x007c0000
#define		AR9170_PHY_RXGAIN_TXRX_RF_MAX_S		18

#define	AR9170_PHY_REG_DESIRED_SZ		(AR9170_PHY_REG_BASE + 0x0050)
#define		AR9170_PHY_DESIRED_SZ_ADC		0x000000ff
#define		AR9170_PHY_DESIRED_SZ_ADC_S		0
#define		AR9170_PHY_DESIRED_SZ_PGA		0x0000ff00
#define		AR9170_PHY_DESIRED_SZ_PGA_S		8
#define		AR9170_PHY_DESIRED_SZ_TOT_DES		0x0ff00000
#define		AR9170_PHY_DESIRED_SZ_TOT_DES_S		20

#define	AR9170_PHY_REG_FIND_SIG			(AR9170_PHY_REG_BASE + 0x0058)
#define		AR9170_PHY_FIND_SIG_FIRSTEP		0x0003f000
#define		AR9170_PHY_FIND_SIG_FIRSTEP_S		12
#define		AR9170_PHY_FIND_SIG_FIRPWR		0x03fc0000
#define		AR9170_PHY_FIND_SIG_FIRPWR_S		18

#define	AR9170_PHY_REG_AGC_CTL1			(AR9170_PHY_REG_BASE + 0x005c)
#define		AR9170_PHY_AGC_CTL1_COARSE_LOW		0x00007f80
#define		AR9170_PHY_AGC_CTL1_COARSE_LOW_S	7
#define		AR9170_PHY_AGC_CTL1_COARSE_HIGH		0x003f8000
#define		AR9170_PHY_AGC_CTL1_COARSE_HIGH_S	15

#define	AR9170_PHY_REG_AGC_CONTROL		(AR9170_PHY_REG_BASE + 0x0060)
#define		AR9170_PHY_AGC_CONTROL_CAL		0x00000001
#define		AR9170_PHY_AGC_CONTROL_NF		0x00000002
#define		AR9170_PHY_AGC_CONTROL_ENABLE_NF	0x00008000
#define		AR9170_PHY_AGC_CONTROL_FLTR_CAL		0x00010000
#define		AR9170_PHY_AGC_CONTROL_NO_UPDATE_NF	0x00020000

#define	AR9170_PHY_REG_CCA			(AR9170_PHY_REG_BASE + 0x0064)
#define		AR9170_PHY_CCA_MIN_PWR			0x0ff80000
#define		AR9170_PHY_CCA_MIN_PWR_S		19
#define		AR9170_PHY_CCA_THRESH62			0x0007f000
#define		AR9170_PHY_CCA_THRESH62_S		12

#define	AR9170_PHY_REG_SFCORR			(AR9170_PHY_REG_BASE + 0x0068)
#define		AR9170_PHY_SFCORR_M2COUNT_THR		0x0000001f
#define		AR9170_PHY_SFCORR_M2COUNT_THR_S		0
#define		AR9170_PHY_SFCORR_M1_THRESH		0x00fe0000
#define		AR9170_PHY_SFCORR_M1_THRESH_S		17
#define		AR9170_PHY_SFCORR_M2_THRESH		0x7f000000
#define		AR9170_PHY_SFCORR_M2_THRESH_S		24

#define	AR9170_PHY_REG_SFCORR_LOW		(AR9170_PHY_REG_BASE + 0x006c)
#define		AR9170_PHY_SFCORR_LOW_USE_SELF_CORR_LOW	0x00000001
#define		AR9170_PHY_SFCORR_LOW_M2COUNT_THR_LOW	0x00003f00
#define		AR9170_PHY_SFCORR_LOW_M2COUNT_THR_LOW_S	8
#define		AR9170_PHY_SFCORR_LOW_M1_THRESH_LOW	0x001fc000
#define		AR9170_PHY_SFCORR_LOW_M1_THRESH_LOW_S	14
#define		AR9170_PHY_SFCORR_LOW_M2_THRESH_LOW	0x0fe00000
#define		AR9170_PHY_SFCORR_LOW_M2_THRESH_LOW_S	21

#define	AR9170_PHY_REG_SLEEP_CTR_CONTROL	(AR9170_PHY_REG_BASE + 0x0070)
#define	AR9170_PHY_REG_SLEEP_CTR_LIMIT		(AR9170_PHY_REG_BASE + 0x0074)
#define	AR9170_PHY_REG_SLEEP_SCAL		(AR9170_PHY_REG_BASE + 0x0078)

#define	AR9170_PHY_REG_PLL_CTL			(AR9170_PHY_REG_BASE + 0x007c)
#define		AR9170_PHY_PLL_CTL_40			0xaa
#define		AR9170_PHY_PLL_CTL_40_5413		0x04
#define		AR9170_PHY_PLL_CTL_44			0xab
#define		AR9170_PHY_PLL_CTL_44_2133		0xeb
#define		AR9170_PHY_PLL_CTL_40_2133		0xea

#define	AR9170_PHY_REG_BIN_MASK_1		(AR9170_PHY_REG_BASE + 0x0100)
#define	AR9170_PHY_REG_BIN_MASK_2		(AR9170_PHY_REG_BASE + 0x0104)
#define	AR9170_PHY_REG_BIN_MASK_3		(AR9170_PHY_REG_BASE + 0x0108)
#define	AR9170_PHY_REG_MASK_CTL			(AR9170_PHY_REG_BASE + 0x010c)

/* analogue power on time (100ns) */
#define	AR9170_PHY_REG_RX_DELAY			(AR9170_PHY_REG_BASE + 0x0114)
#define	AR9170_PHY_REG_SEARCH_START_DELAY	(AR9170_PHY_REG_BASE + 0x0118)
#define		AR9170_PHY_RX_DELAY_DELAY		0x00003fff

#define	AR9170_PHY_REG_TIMING_CTRL4(_i)		(AR9170_PHY_REG_BASE + \
(0x0120 + ((_i) << 12)))
#define		AR9170_PHY_TIMING_CTRL4_IQCORR_Q_Q_COFF		0x01f
#define		AR9170_PHY_TIMING_CTRL4_IQCORR_Q_Q_COFF_S	0
#define		AR9170_PHY_TIMING_CTRL4_IQCORR_Q_I_COFF		0x7e0
#define		AR9170_PHY_TIMING_CTRL4_IQCORR_Q_I_COFF_S	5
#define		AR9170_PHY_TIMING_CTRL4_IQCORR_ENABLE		0x800
#define		AR9170_PHY_TIMING_CTRL4_IQCAL_LOG_COUNT_MAX	0xf000
#define		AR9170_PHY_TIMING_CTRL4_IQCAL_LOG_COUNT_MAX_S	12
#define		AR9170_PHY_TIMING_CTRL4_DO_IQCAL		0x10000
#define		AR9170_PHY_TIMING_CTRL4_ENABLE_SPUR_RSSI	0x80000000
#define		AR9170_PHY_TIMING_CTRL4_ENABLE_SPUR_FILTER	0x40000000
#define		AR9170_PHY_TIMING_CTRL4_ENABLE_CHAN_MASK	0x20000000
#define		AR9170_PHY_TIMING_CTRL4_ENABLE_PILOT_MASK	0x10000000

#define	AR9170_PHY_REG_TIMING5			(AR9170_PHY_REG_BASE + 0x0124)
#define		AR9170_PHY_TIMING5_CYCPWR_THR1		0x000000fe
#define		AR9170_PHY_TIMING5_CYCPWR_THR1_S	1

#define	AR9170_PHY_REG_POWER_TX_RATE1		(AR9170_PHY_REG_BASE + 0x0134)
#define	AR9170_PHY_REG_POWER_TX_RATE2		(AR9170_PHY_REG_BASE + 0x0138)
#define	AR9170_PHY_REG_POWER_TX_RATE_MAX	(AR9170_PHY_REG_BASE + 0x013c)
#define		AR9170_PHY_POWER_TX_RATE_MAX_TPC_ENABLE	0x00000040

#define	AR9170_PHY_REG_FRAME_CTL		(AR9170_PHY_REG_BASE + 0x0144)
#define		AR9170_PHY_FRAME_CTL_TX_CLIP		0x00000038
#define		AR9170_PHY_FRAME_CTL_TX_CLIP_S		3

#define	AR9170_PHY_REG_SPUR_REG			(AR9170_PHY_REG_BASE + 0x014c)
#define		AR9170_PHY_SPUR_REG_MASK_RATE_CNTL	(0xff << 18)
#define		AR9170_PHY_SPUR_REG_MASK_RATE_CNTL_S	18
#define		AR9170_PHY_SPUR_REG_ENABLE_MASK_PPM	0x20000
#define		AR9170_PHY_SPUR_REG_MASK_RATE_SELECT	(0xff << 9)
#define		AR9170_PHY_SPUR_REG_MASK_RATE_SELECT_S	9
#define		AR9170_PHY_SPUR_REG_ENABLE_VIT_SPUR_RSSI	0x100
#define		AR9170_PHY_SPUR_REG_SPUR_RSSI_THRESH	0x7f
#define		AR9170_PHY_SPUR_REG_SPUR_RSSI_THRESH_S	0

#define	AR9170_PHY_REG_RADAR_EXT		(AR9170_PHY_REG_BASE + 0x0140)
#define		AR9170_PHY_RADAR_EXT_ENA		0x00004000

#define	AR9170_PHY_REG_RADAR_0			(AR9170_PHY_REG_BASE + 0x0154)
#define		AR9170_PHY_RADAR_0_ENA			0x00000001
#define		AR9170_PHY_RADAR_0_FFT_ENA		0x80000000
/* inband pulse threshold */
#define		AR9170_PHY_RADAR_0_INBAND		0x0000003e
#define		AR9170_PHY_RADAR_0_INBAND_S		1
/* pulse RSSI threshold */
#define		AR9170_PHY_RADAR_0_PRSSI		0x00000fc0
#define		AR9170_PHY_RADAR_0_PRSSI_S		6
/* pulse height threshold */
#define		AR9170_PHY_RADAR_0_HEIGHT		0x0003f000
#define		AR9170_PHY_RADAR_0_HEIGHT_S		12
/* radar RSSI threshold */
#define		AR9170_PHY_RADAR_0_RRSSI		0x00fc0000
#define		AR9170_PHY_RADAR_0_RRSSI_S		18
/* radar firepower threshold */
#define		AR9170_PHY_RADAR_0_FIRPWR		0x7f000000
#define		AR9170_PHY_RADAR_0_FIRPWR_S		24

#define	AR9170_PHY_REG_RADAR_1			(AR9170_PHY_REG_BASE + 0x0158)
#define		AR9170_PHY_RADAR_1_RELPWR_ENA		0x00800000
#define		AR9170_PHY_RADAR_1_USE_FIR128		0x00400000
#define		AR9170_PHY_RADAR_1_RELPWR_THRESH	0x003f0000
#define		AR9170_PHY_RADAR_1_RELPWR_THRESH_S	16
#define		AR9170_PHY_RADAR_1_BLOCK_CHECK		0x00008000
#define		AR9170_PHY_RADAR_1_MAX_RRSSI		0x00004000
#define		AR9170_PHY_RADAR_1_RELSTEP_CHECK	0x00002000
#define		AR9170_PHY_RADAR_1_RELSTEP_THRESH	0x00001f00
#define		AR9170_PHY_RADAR_1_RELSTEP_THRESH_S	8
#define		AR9170_PHY_RADAR_1_MAXLEN		0x000000ff
#define		AR9170_PHY_RADAR_1_MAXLEN_S		0

#define	AR9170_PHY_REG_SWITCH_CHAIN_0		(AR9170_PHY_REG_BASE + 0x0160)
#define	AR9170_PHY_REG_SWITCH_CHAIN_2		(AR9170_PHY_REG_BASE + 0x2160)

#define	AR9170_PHY_REG_SWITCH_COM		(AR9170_PHY_REG_BASE + 0x0164)

#define	AR9170_PHY_REG_CCA_THRESHOLD		(AR9170_PHY_REG_BASE + 0x0168)

#define	AR9170_PHY_REG_SIGMA_DELTA		(AR9170_PHY_REG_BASE + 0x016c)
#define		AR9170_PHY_SIGMA_DELTA_ADC_SEL		0x00000003
#define		AR9170_PHY_SIGMA_DELTA_ADC_SEL_S	0
#define		AR9170_PHY_SIGMA_DELTA_FILT2		0x000000f8
#define		AR9170_PHY_SIGMA_DELTA_FILT2_S		3
#define		AR9170_PHY_SIGMA_DELTA_FILT1		0x00001f00
#define		AR9170_PHY_SIGMA_DELTA_FILT1_S		8
#define		AR9170_PHY_SIGMA_DELTA_ADC_CLIP		0x01ffe000
#define		AR9170_PHY_SIGMA_DELTA_ADC_CLIP_S	13

#define	AR9170_PHY_REG_RESTART			(AR9170_PHY_REG_BASE + 0x0170)
#define		AR9170_PHY_RESTART_DIV_GC		0x001c0000
#define		AR9170_PHY_RESTART_DIV_GC_S		18

#define	AR9170_PHY_REG_RFBUS_REQ		(AR9170_PHY_REG_BASE + 0x017c)
#define		AR9170_PHY_RFBUS_REQ_EN			0x00000001

#define	AR9170_PHY_REG_TIMING7			(AR9170_PHY_REG_BASE + 0x0180)
#define	AR9170_PHY_REG_TIMING8			(AR9170_PHY_REG_BASE + 0x0184)
#define		AR9170_PHY_TIMING8_PILOT_MASK_2		0x000fffff
#define		AR9170_PHY_TIMING8_PILOT_MASK_2_S	0

#define	AR9170_PHY_REG_BIN_MASK2_1		(AR9170_PHY_REG_BASE + 0x0188)
#define	AR9170_PHY_REG_BIN_MASK2_2		(AR9170_PHY_REG_BASE + 0x018c)
#define	AR9170_PHY_REG_BIN_MASK2_3		(AR9170_PHY_REG_BASE + 0x0190)
#define	AR9170_PHY_REG_BIN_MASK2_4		(AR9170_PHY_REG_BASE + 0x0194)
#define		AR9170_PHY_BIN_MASK2_4_MASK_4		0x00003fff
#define		AR9170_PHY_BIN_MASK2_4_MASK_4_S		0

#define	AR9170_PHY_REG_TIMING9			(AR9170_PHY_REG_BASE + 0x0198)
#define	AR9170_PHY_REG_TIMING10			(AR9170_PHY_REG_BASE + 0x019c)
#define		AR9170_PHY_TIMING10_PILOT_MASK_2	0x000fffff
#define		AR9170_PHY_TIMING10_PILOT_MASK_2_S	0

#define	AR9170_PHY_REG_TIMING11			(AR9170_PHY_REG_BASE + 0x01a0)
#define		AR9170_PHY_TIMING11_SPUR_DELTA_PHASE	0x000fffff
#define		AR9170_PHY_TIMING11_SPUR_DELTA_PHASE_S	0
#define		AR9170_PHY_TIMING11_SPUR_FREQ_SD	0x3ff00000
#define		AR9170_PHY_TIMING11_SPUR_FREQ_SD_S	20
#define		AR9170_PHY_TIMING11_USE_SPUR_IN_AGC	0x40000000
#define		AR9170_PHY_TIMING11_USE_SPUR_IN_SELFCOR	0x80000000

#define	AR9170_PHY_REG_RX_CHAINMASK		(AR9170_PHY_REG_BASE + 0x01a4)
#define	AR9170_PHY_REG_NEW_ADC_DC_GAIN_CORR(_i)	(AR9170_PHY_REG_BASE + \
0x01b4 + ((_i) << 12))
#define		AR9170_PHY_NEW_ADC_GAIN_CORR_ENABLE		0x40000000
#define		AR9170_PHY_NEW_ADC_DC_OFFSET_CORR_ENABLE	0x80000000

#define	AR9170_PHY_REG_MULTICHAIN_GAIN_CTL	(AR9170_PHY_REG_BASE + 0x01ac)
#define		AR9170_PHY_9285_ANT_DIV_CTL_ALL		0x7f000000
#define		AR9170_PHY_9285_ANT_DIV_CTL		0x01000000
#define		AR9170_PHY_9285_ANT_DIV_CTL_S		24
#define		AR9170_PHY_9285_ANT_DIV_ALT_LNACONF	0x06000000
#define		AR9170_PHY_9285_ANT_DIV_ALT_LNACONF_S	25
#define		AR9170_PHY_9285_ANT_DIV_MAIN_LNACONF	0x18000000
#define		AR9170_PHY_9285_ANT_DIV_MAIN_LNACONF_S	27
#define		AR9170_PHY_9285_ANT_DIV_ALT_GAINTB	0x20000000
#define		AR9170_PHY_9285_ANT_DIV_ALT_GAINTB_S	29
#define		AR9170_PHY_9285_ANT_DIV_MAIN_GAINTB	0x40000000
#define		AR9170_PHY_9285_ANT_DIV_MAIN_GAINTB_S	30
#define		AR9170_PHY_9285_ANT_DIV_LNA1		2
#define		AR9170_PHY_9285_ANT_DIV_LNA2		1
#define		AR9170_PHY_9285_ANT_DIV_LNA1_PLUS_LNA2	3
#define		AR9170_PHY_9285_ANT_DIV_LNA1_MINUS_LNA2	0
#define		AR9170_PHY_9285_ANT_DIV_GAINTB_0	0
#define		AR9170_PHY_9285_ANT_DIV_GAINTB_1	1

#define	AR9170_PHY_REG_EXT_CCA0			(AR9170_PHY_REG_BASE + 0x01b8)
#define		AR9170_PHY_REG_EXT_CCA0_THRESH62	0x000000ff
#define		AR9170_PHY_REG_EXT_CCA0_THRESH62_S	0

#define	AR9170_PHY_REG_EXT_CCA			(AR9170_PHY_REG_BASE + 0x01bc)
#define		AR9170_PHY_EXT_CCA_CYCPWR_THR1		0x0000fe00
#define		AR9170_PHY_EXT_CCA_CYCPWR_THR1_S	9
#define		AR9170_PHY_EXT_CCA_THRESH62		0x007f0000
#define		AR9170_PHY_EXT_CCA_THRESH62_S		16
#define		AR9170_PHY_EXT_CCA_MIN_PWR		0xff800000
#define		AR9170_PHY_EXT_CCA_MIN_PWR_S		23

#define	AR9170_PHY_REG_SFCORR_EXT		(AR9170_PHY_REG_BASE + 0x01c0)
#define		AR9170_PHY_SFCORR_EXT_M1_THRESH		0x0000007f
#define		AR9170_PHY_SFCORR_EXT_M1_THRESH_S	0
#define		AR9170_PHY_SFCORR_EXT_M2_THRESH		0x00003f80
#define		AR9170_PHY_SFCORR_EXT_M2_THRESH_S	7
#define		AR9170_PHY_SFCORR_EXT_M1_THRESH_LOW	0x001fc000
#define		AR9170_PHY_SFCORR_EXT_M1_THRESH_LOW_S	14
#define		AR9170_PHY_SFCORR_EXT_M2_THRESH_LOW	0x0fe00000
#define		AR9170_PHY_SFCORR_EXT_M2_THRESH_LOW_S	21
#define		AR9170_PHY_SFCORR_SPUR_SUBCHNL_SD_S	28

#define	AR9170_PHY_REG_HALFGI			(AR9170_PHY_REG_BASE + 0x01d0)
#define		AR9170_PHY_HALFGI_DSC_MAN		0x0007fff0
#define		AR9170_PHY_HALFGI_DSC_MAN_S		4
#define		AR9170_PHY_HALFGI_DSC_EXP		0x0000000f
#define		AR9170_PHY_HALFGI_DSC_EXP_S		0

#define	AR9170_PHY_REG_CHANNEL_MASK_01_30	(AR9170_PHY_REG_BASE + 0x01d4)
#define	AR9170_PHY_REG_CHANNEL_MASK_31_60	(AR9170_PHY_REG_BASE + 0x01d8)

#define	AR9170_PHY_REG_CHAN_INFO_MEMORY		(AR9170_PHY_REG_BASE + 0x01dc)
#define		AR9170_PHY_CHAN_INFO_MEMORY_CAPTURE_MASK	0x0001

#define	AR9170_PHY_REG_HEAVY_CLIP_ENABLE	(AR9170_PHY_REG_BASE + 0x01e0)
#define	AR9170_PHY_REG_HEAVY_CLIP_FACTOR_RIFS	(AR9170_PHY_REG_BASE + 0x01ec)
#define		AR9170_PHY_RIFS_INIT_DELAY		0x03ff0000

#define	AR9170_PHY_REG_CALMODE			(AR9170_PHY_REG_BASE + 0x01f0)
#define		AR9170_PHY_CALMODE_IQ			0x00000000
#define		AR9170_PHY_CALMODE_ADC_GAIN		0x00000001
#define		AR9170_PHY_CALMODE_ADC_DC_PER		0x00000002
#define		AR9170_PHY_CALMODE_ADC_DC_INIT		0x00000003

#define	AR9170_PHY_REG_REFCLKDLY		(AR9170_PHY_REG_BASE + 0x01f4)
#define	AR9170_PHY_REG_REFCLKPD			(AR9170_PHY_REG_BASE + 0x01f8)


#define	AR9170_PHY_REG_CAL_MEAS_0(_i)		(AR9170_PHY_REG_BASE + \
0x0410 + ((_i) << 12))
#define	AR9170_PHY_REG_CAL_MEAS_1(_i)		(AR9170_PHY_REG_BASE + \
0x0414 \ + ((_i) << 12))
#define	AR9170_PHY_REG_CAL_MEAS_2(_i)		(AR9170_PHY_REG_BASE + \
0x0418 + ((_i) << 12))
#define	AR9170_PHY_REG_CAL_MEAS_3(_i)		(AR9170_PHY_REG_BASE + \
0x041c + ((_i) << 12))

#define	AR9170_PHY_REG_CURRENT_RSSI		(AR9170_PHY_REG_BASE + 0x041c)

#define	AR9170_PHY_REG_RFBUS_GRANT		(AR9170_PHY_REG_BASE + 0x0420)
#define		AR9170_PHY_RFBUS_GRANT_EN		0x00000001

#define	AR9170_PHY_REG_CHAN_INFO_GAIN_DIFF	(AR9170_PHY_REG_BASE + 0x04f4)
#define		AR9170_PHY_CHAN_INFO_GAIN_DIFF_UPPER_LIMIT	320

#define	AR9170_PHY_REG_CHAN_INFO_GAIN		(AR9170_PHY_REG_BASE + 0x04fc)

#define	AR9170_PHY_REG_MODE			(AR9170_PHY_REG_BASE + 0x0a00)
#define		AR9170_PHY_MODE_ASYNCFIFO		0x80
#define		AR9170_PHY_MODE_AR2133			0x08
#define		AR9170_PHY_MODE_AR5111			0x00
#define		AR9170_PHY_MODE_AR5112			0x08
#define		AR9170_PHY_MODE_DYNAMIC			0x04
#define		AR9170_PHY_MODE_RF2GHZ			0x02
#define		AR9170_PHY_MODE_RF5GHZ			0x00
#define		AR9170_PHY_MODE_CCK			0x01
#define		AR9170_PHY_MODE_OFDM			0x00
#define		AR9170_PHY_MODE_DYN_CCK_DISABLE		0x100

#define	AR9170_PHY_REG_CCK_TX_CTRL		(AR9170_PHY_REG_BASE + 0x0a04)
#define		AR9170_PHY_CCK_TX_CTRL_JAPAN			0x00000010
#define		AR9170_PHY_CCK_TX_CTRL_TX_DAC_SCALE_CCK         0x0000000c
#define		AR9170_PHY_CCK_TX_CTRL_TX_DAC_SCALE_CCK_S       2

#define	AR9170_PHY_REG_CCK_DETECT		(AR9170_PHY_REG_BASE + 0x0a08)
#define		AR9170_PHY_CCK_DETECT_WEAK_SIG_THR_CCK		0x0000003f
#define		AR9170_PHY_CCK_DETECT_WEAK_SIG_THR_CCK_S	0
/* [12:6] settling time for antenna switch */
#define		AR9170_PHY_CCK_DETECT_ANT_SWITCH_TIME		0x00001fc0
#define		AR9170_PHY_CCK_DETECT_ANT_SWITCH_TIME_S		6
#define		AR9170_PHY_CCK_DETECT_BB_ENABLE_ANT_FAST_DIV	0x2000
#define		AR9170_PHY_CCK_DETECT_BB_ENABLE_ANT_FAST_DIV_S	13

#define	AR9170_PHY_REG_GAIN_2GHZ		(AR9170_PHY_REG_BASE + 0x0a0c)
#define	AR9170_PHY_REG_GAIN_2GHZ_CHAIN_2	(AR9170_PHY_REG_BASE + 0x2a0c)
#define		AR9170_PHY_GAIN_2GHZ_RXTX_MARGIN	0x00fc0000
#define		AR9170_PHY_GAIN_2GHZ_RXTX_MARGIN_S	18
#define		AR9170_PHY_GAIN_2GHZ_BSW_MARGIN		0x00003c00
#define		AR9170_PHY_GAIN_2GHZ_BSW_MARGIN_S	10
#define		AR9170_PHY_GAIN_2GHZ_BSW_ATTEN		0x0000001f
#define		AR9170_PHY_GAIN_2GHZ_BSW_ATTEN_S	0
#define		AR9170_PHY_GAIN_2GHZ_XATTEN2_MARGIN	0x003e0000
#define		AR9170_PHY_GAIN_2GHZ_XATTEN2_MARGIN_S	17
#define		AR9170_PHY_GAIN_2GHZ_XATTEN1_MARGIN	0x0001f000
#define		AR9170_PHY_GAIN_2GHZ_XATTEN1_MARGIN_S	12
#define		AR9170_PHY_GAIN_2GHZ_XATTEN2_DB		0x00000fc0
#define		AR9170_PHY_GAIN_2GHZ_XATTEN2_DB_S	6
#define		AR9170_PHY_GAIN_2GHZ_XATTEN1_DB		0x0000003f
#define		AR9170_PHY_GAIN_2GHZ_XATTEN1_DB_S	0

#define	AR9170_PHY_REG_CCK_RXCTRL4		(AR9170_PHY_REG_BASE + 0x0a1c)
#define		AR9170_PHY_CCK_RXCTRL4_FREQ_EST_SHORT	0x01f80000
#define		AR9170_PHY_CCK_RXCTRL4_FREQ_EST_SHORT_S	19

#define	AR9170_PHY_REG_DAG_CTRLCCK		(AR9170_PHY_REG_BASE + 0x0a28)
#define		AR9170_REG_DAG_CTRLCCK_EN_RSSI_THR	0x00000200
#define		AR9170_REG_DAG_CTRLCCK_RSSI_THR		0x0001fc00
#define		AR9170_REG_DAG_CTRLCCK_RSSI_THR_S	10

#define	AR9170_PHY_REG_FORCE_CLKEN_CCK		(AR9170_PHY_REG_BASE + 0x0a2c)
#define		AR9170_FORCE_CLKEN_CCK_MRC_MUX		0x00000040

#define	AR9170_PHY_REG_POWER_TX_RATE3		(AR9170_PHY_REG_BASE + 0x0a34)
#define	AR9170_PHY_REG_POWER_TX_RATE4		(AR9170_PHY_REG_BASE + 0x0a38)

#define	AR9170_PHY_REG_SCRM_SEQ_XR		(AR9170_PHY_REG_BASE + 0x0a3c)
#define	AR9170_PHY_REG_HEADER_DETECT_XR		(AR9170_PHY_REG_BASE + 0x0a40)
#define	AR9170_PHY_REG_CHIRP_DETECTED_XR	(AR9170_PHY_REG_BASE + 0x0a44)
#define	AR9170_PHY_REG_BLUETOOTH		(AR9170_PHY_REG_BASE + 0x0a54)

#define	AR9170_PHY_REG_TPCRG1			(AR9170_PHY_REG_BASE + 0x0a58)
#define		AR9170_PHY_TPCRG1_NUM_PD_GAIN		0x0000c000
#define		AR9170_PHY_TPCRG1_NUM_PD_GAIN_S		14
#define		AR9170_PHY_TPCRG1_PD_GAIN_1		0x00030000
#define		AR9170_PHY_TPCRG1_PD_GAIN_1_S		16
#define		AR9170_PHY_TPCRG1_PD_GAIN_2		0x000c0000
#define		AR9170_PHY_TPCRG1_PD_GAIN_2_S		18
#define		AR9170_PHY_TPCRG1_PD_GAIN_3		0x00300000
#define		AR9170_PHY_TPCRG1_PD_GAIN_3_S		20
#define		AR9170_PHY_TPCRG1_PD_CAL_ENABLE		0x00400000
#define		AR9170_PHY_TPCRG1_PD_CAL_ENABLE_S	22

#define	AR9170_PHY_REG_TX_PWRCTRL4		(AR9170_PHY_REG_BASE + 0x0a64)
#define		AR9170_PHY_TX_PWRCTRL_PD_AVG_VALID	0x00000001
#define		AR9170_PHY_TX_PWRCTRL_PD_AVG_VALID_S	0
#define		AR9170_PHY_TX_PWRCTRL_PD_AVG_OUT	0x000001fe
#define		AR9170_PHY_TX_PWRCTRL_PD_AVG_OUT_S	1

#define	AR9170_PHY_REG_ANALOG_SWAP		(AR9170_PHY_REG_BASE + 0x0a68)
#define		AR9170_PHY_ANALOG_SWAP_AB		0x0001
#define		AR9170_PHY_ANALOG_SWAP_ALT_CHAIN	0x00000040

#define	AR9170_PHY_REG_TPCRG5			(AR9170_PHY_REG_BASE + 0x0a6c)
#define		AR9170_PHY_TPCRG5_PD_GAIN_OVERLAP	0x0000000f
#define		AR9170_PHY_TPCRG5_PD_GAIN_OVERLAP_S	0
#define		AR9170_PHY_TPCRG5_PD_GAIN_BOUNDARY_1	0x000003f0
#define		AR9170_PHY_TPCRG5_PD_GAIN_BOUNDARY_1_S	4
#define		AR9170_PHY_TPCRG5_PD_GAIN_BOUNDARY_2	0x0000fc00
#define		AR9170_PHY_TPCRG5_PD_GAIN_BOUNDARY_2_S	10
#define		AR9170_PHY_TPCRG5_PD_GAIN_BOUNDARY_3    0x003f0000
#define		AR9170_PHY_TPCRG5_PD_GAIN_BOUNDARY_3_S  16
#define		AR9170_PHY_TPCRG5_PD_GAIN_BOUNDARY_4    0x0fc00000
#define		AR9170_PHY_TPCRG5_PD_GAIN_BOUNDARY_4_S  22

#define	AR9170_PHY_REG_TX_PWRCTRL6_0		(AR9170_PHY_REG_BASE + 0x0a70)
#define	AR9170_PHY_REG_TX_PWRCTRL6_1		(AR9170_PHY_REG_BASE + 0x1a70)
#define		AR9170_PHY_TX_PWRCTRL_ERR_EST_MODE	0x03000000
#define		AR9170_PHY_TX_PWRCTRL_ERR_EST_MODE_S	24

#define	AR9170_PHY_REG_TX_PWRCTRL7		(AR9170_PHY_REG_BASE + 0x0a74)
#define		AR9170_PHY_TX_PWRCTRL_INIT_TX_GAIN	0x01f80000
#define		AR9170_PHY_TX_PWRCTRL_INIT_TX_GAIN_S	19

#define	AR9170_PHY_REG_TX_PWRCTRL9		(AR9170_PHY_REG_BASE + 0x0a7c)
#define		AR9170_PHY_TX_DESIRED_SCALE_CCK		0x00007c00
#define		AR9170_PHY_TX_DESIRED_SCALE_CCK_S	10
#define		AR9170_PHY_TX_PWRCTRL9_RES_DC_REMOVAL	0x80000000
#define		AR9170_PHY_TX_PWRCTRL9_RES_DC_REMOVAL_S	31

#define	AR9170_PHY_REG_TX_GAIN_TBL1		(AR9170_PHY_REG_BASE + 0x0b00)
#define		AR9170_PHY_TX_GAIN			0x0007f000
#define		AR9170_PHY_TX_GAIN_S			12

/* Carrier leak calibration control, do it after AGC calibration */
#define	AR9170_PHY_REG_CL_CAL_CTL		(AR9170_PHY_REG_BASE + 0x0b58)
#define		AR9170_PHY_CL_CAL_ENABLE		0x00000002
#define		AR9170_PHY_CL_CAL_PARALLEL_CAL_ENABLE	0x00000001

#define	AR9170_PHY_REG_POWER_TX_RATE5		(AR9170_PHY_REG_BASE + 0x0b8c)
#define	AR9170_PHY_REG_POWER_TX_RATE6		(AR9170_PHY_REG_BASE + 0x0b90)

#define	AR9170_PHY_REG_CH0_TX_PWRCTRL11		(AR9170_PHY_REG_BASE + 0x0b98)
#define	AR9170_PHY_REG_CH1_TX_PWRCTRL11		(AR9170_PHY_REG_BASE + 0x1b98)
#define		AR9170_PHY_TX_CHX_PWRCTRL_OLPC_TEMP_COMP	0x0000fc00
#define		AR9170_PHY_TX_CHX_PWRCTRL_OLPC_TEMP_COMP_S	10

#define	AR9170_PHY_REG_CAL_CHAINMASK		(AR9170_PHY_REG_BASE + 0x0b9c)
#define	AR9170_PHY_REG_VIT_MASK2_M_46_61	(AR9170_PHY_REG_BASE + 0x0ba0)
#define	AR9170_PHY_REG_MASK2_M_31_45		(AR9170_PHY_REG_BASE + 0x0ba4)
#define	AR9170_PHY_REG_MASK2_M_16_30		(AR9170_PHY_REG_BASE + 0x0ba8)
#define	AR9170_PHY_REG_MASK2_M_00_15		(AR9170_PHY_REG_BASE + 0x0bac)
#define	AR9170_PHY_REG_PILOT_MASK_01_30		(AR9170_PHY_REG_BASE + 0x0bb0)
#define	AR9170_PHY_REG_PILOT_MASK_31_60		(AR9170_PHY_REG_BASE + 0x0bb4)
#define	AR9170_PHY_REG_MASK2_P_15_01		(AR9170_PHY_REG_BASE + 0x0bb8)
#define	AR9170_PHY_REG_MASK2_P_30_16		(AR9170_PHY_REG_BASE + 0x0bbc)
#define	AR9170_PHY_REG_MASK2_P_45_31		(AR9170_PHY_REG_BASE + 0x0bc0)
#define	AR9170_PHY_REG_MASK2_P_61_45		(AR9170_PHY_REG_BASE + 0x0bc4)
#define	AR9170_PHY_REG_POWER_TX_SUB		(AR9170_PHY_REG_BASE + 0x0bc8)
#define	AR9170_PHY_REG_POWER_TX_RATE7		(AR9170_PHY_REG_BASE + 0x0bcc)
#define	AR9170_PHY_REG_POWER_TX_RATE8		(AR9170_PHY_REG_BASE + 0x0bd0)
#define	AR9170_PHY_REG_POWER_TX_RATE9		(AR9170_PHY_REG_BASE + 0x0bd4)
#define	AR9170_PHY_REG_XPA_CFG			(AR9170_PHY_REG_BASE + 0x0bd8)
#define		AR9170_PHY_FORCE_XPA_CFG		0x000000001
#define		AR9170_PHY_FORCE_XPA_CFG_S		0

#define	AR9170_PHY_REG_CH1_CCA			(AR9170_PHY_REG_BASE + 0x1064)
#define		AR9170_PHY_CH1_CCA_MIN_PWR		0x0ff80000
#define		AR9170_PHY_CH1_CCA_MIN_PWR_S		19

#define	AR9170_PHY_REG_CH2_CCA			(AR9170_PHY_REG_BASE + 0x2064)
#define		AR9170_PHY_CH2_CCA_MIN_PWR		0x0ff80000
#define		AR9170_PHY_CH2_CCA_MIN_PWR_S		19

#define	AR9170_PHY_REG_CH1_EXT_CCA		(AR9170_PHY_REG_BASE + 0x11bc)
#define		AR9170_PHY_CH1_EXT_CCA_MIN_PWR		0xff800000
#define		AR9170_PHY_CH1_EXT_CCA_MIN_PWR_S	23

#define	AR9170_PHY_REG_CH2_EXT_CCA		(AR9170_PHY_REG_BASE + 0x21bc)
#define		AR9170_PHY_CH2_EXT_CCA_MIN_PWR		0xff800000
#define		AR9170_PHY_CH2_EXT_CCA_MIN_PWR_S	23




struct ar9170_rf_initvals {
	U32 reg, _5ghz, _2ghz;
};

static struct ar9170_rf_initvals ar9170_rf_initval[] = {
	/* bank 0 */
{ 0x1c58b0, 0x1e5795e5, 0x1e5795e5},
{ 0x1c58e0, 0x02008020, 0x02008020},
	/* bank 1 */
{ 0x1c58b0, 0x02108421, 0x02108421},
{ 0x1c58ec, 0x00000008, 0x00000008},
	/* bank 2 */
{ 0x1c58b0, 0x0e73ff17, 0x0e73ff17},
{ 0x1c58e0, 0x00000420, 0x00000420},
	/* bank 3 */
{ 0x1c58f0, 0x01400018, 0x01c00018},
	/* bank 4 */
{ 0x1c58b0, 0x000001a1, 0x000001a1},
{ 0x1c58e8, 0x00000001, 0x00000001},
	/* bank 5 */
{ 0x1c58b0, 0x00000013, 0x00000013},
{ 0x1c58e4, 0x00000002, 0x00000002},
	/* bank 6 */
{ 0x1c58b0, 0x00000000, 0x00000000},
{ 0x1c58b0, 0x00000000, 0x00000000},
{ 0x1c58b0, 0x00000000, 0x00000000},
{ 0x1c58b0, 0x00000000, 0x00000000},
{ 0x1c58b0, 0x00000000, 0x00000000},
{ 0x1c58b0, 0x00004000, 0x00004000},
{ 0x1c58b0, 0x00006c00, 0x00006c00},
{ 0x1c58b0, 0x00002c00, 0x00002c00},
{ 0x1c58b0, 0x00004800, 0x00004800},
{ 0x1c58b0, 0x00004000, 0x00004000},
{ 0x1c58b0, 0x00006000, 0x00006000},
{ 0x1c58b0, 0x00001000, 0x00001000},
{ 0x1c58b0, 0x00004000, 0x00004000},
{ 0x1c58b0, 0x00007c00, 0x00007c00},
{ 0x1c58b0, 0x00007c00, 0x00007c00},
{ 0x1c58b0, 0x00007c00, 0x00007c00},
{ 0x1c58b0, 0x00007c00, 0x00007c00},
{ 0x1c58b0, 0x00007c00, 0x00007c00},
{ 0x1c58b0, 0x00087c00, 0x00087c00},
{ 0x1c58b0, 0x00007c00, 0x00007c00},
{ 0x1c58b0, 0x00005400, 0x00005400},
{ 0x1c58b0, 0x00000c00, 0x00000c00},
{ 0x1c58b0, 0x00001800, 0x00001800},
{ 0x1c58b0, 0x00007c00, 0x00007c00},
{ 0x1c58b0, 0x00006c00, 0x00006c00},
{ 0x1c58b0, 0x00006c00, 0x00006c00},
{ 0x1c58b0, 0x00007c00, 0x00007c00},
{ 0x1c58b0, 0x00002c00, 0x00002c00},
{ 0x1c58b0, 0x00003c00, 0x00003c00},
{ 0x1c58b0, 0x00003800, 0x00003800},
{ 0x1c58b0, 0x00001c00, 0x00001c00},
{ 0x1c58b0, 0x00000800, 0x00000800},
{ 0x1c58b0, 0x00000408, 0x00000408},
{ 0x1c58b0, 0x00004c15, 0x00004c15},
{ 0x1c58b0, 0x00004188, 0x00004188},
{ 0x1c58b0, 0x0000201e, 0x0000201e},
{ 0x1c58b0, 0x00010408, 0x00010408},
{ 0x1c58b0, 0x00000801, 0x00000801},
{ 0x1c58b0, 0x00000c08, 0x00000c08},
{ 0x1c58b0, 0x0000181e, 0x0000181e},
{ 0x1c58b0, 0x00001016, 0x00001016},
{ 0x1c58b0, 0x00002800, 0x00002800},
{ 0x1c58b0, 0x00004010, 0x00004010},
{ 0x1c58b0, 0x0000081c, 0x0000081c},
{ 0x1c58b0, 0x00000115, 0x00000115},
{ 0x1c58b0, 0x00000015, 0x00000015},
{ 0x1c58b0, 0x00000066, 0x00000066},
{ 0x1c58b0, 0x0000001c, 0x0000001c},
{ 0x1c58b0, 0x00000000, 0x00000000},
{ 0x1c58b0, 0x00000004, 0x00000004},
{ 0x1c58b0, 0x00000015, 0x00000015},
{ 0x1c58b0, 0x0000001f, 0x0000001f},
{ 0x1c58e0, 0x00000000, 0x00000400},
	/* bank 7 */
{ 0x1c58b0, 0x000000a0, 0x000000a0},
{ 0x1c58b0, 0x00000000, 0x00000000},
{ 0x1c58b0, 0x00000040, 0x00000040},
{ 0x1c58f0, 0x0000001c, 0x0000001c},
};





struct carl9170_phy_init {
	U32 reg, _5ghz_20, _5ghz_40, _2ghz_40, _2ghz_20;
};

static struct carl9170_phy_init ar5416_phy_init[] = {
{ 0x1c5800, 0x00000007, 0x00000007, 0x00000007, 0x00000007, },
{ 0x1c5804, 0x00000300, 0x000003c4, 0x000003c4, 0x00000300, },
{ 0x1c5808, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c580c, 0xad848e19, 0xad848e19, 0xad848e19, 0xad848e19, },
{ 0x1c5810, 0x7d14e000, 0x7d14e000, 0x7d14e000, 0x7d14e000, },
{ 0x1c5814, 0x9c0a9f6b, 0x9c0a9f6b, 0x9c0a9f6b, 0x9c0a9f6b, },
{ 0x1c5818, 0x00000090, 0x00000090, 0x00000090, 0x00000090, },
{ 0x1c581c, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c5820, 0x02020200, 0x02020200, 0x02020200, 0x02020200, },
{ 0x1c5824, 0x00000e0e, 0x00000e0e, 0x00000e0e, 0x00000e0e, },
{ 0x1c5828, 0x0a020001, 0x0a020001, 0x0a020001, 0x0a020001, },
{ 0x1c582c, 0x0000a000, 0x0000a000, 0x0000a000, 0x0000a000, },
{ 0x1c5830, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c5834, 0x00000e0e, 0x00000e0e, 0x00000e0e, 0x00000e0e, },
{ 0x1c5838, 0x00000007, 0x00000007, 0x00000007, 0x00000007, },
{ 0x1c583c, 0x00200400, 0x00200400, 0x00200400, 0x00200400, },
{ 0x1c5840, 0x206a002e, 0x206a002e, 0x206a002e, 0x206a002e, },
{ 0x1c5844, 0x1372161e, 0x13721c1e, 0x13721c24, 0x137216a4, },
{ 0x1c5848, 0x001a6a65, 0x001a6a65, 0x00197a68, 0x00197a68, },
{ 0x1c584c, 0x1284233c, 0x1284233c, 0x1284233c, 0x1284233c, },
{ 0x1c5850, 0x6c48b4e4, 0x6d48b4e4, 0x6d48b0e4, 0x6c48b0e4, },
{ 0x1c5854, 0x00000859, 0x00000859, 0x00000859, 0x00000859, },
{ 0x1c5858, 0x7ec80d2e, 0x7ec80d2e, 0x7ec80d2e, 0x7ec80d2e, },
{ 0x1c585c, 0x31395c5e, 0x3139605e, 0x3139605e, 0x31395c5e, },
{ 0x1c5860, 0x0004dd10, 0x0004dd10, 0x0004dd20, 0x0004dd20, },
{ 0x1c5864, 0x0001c600, 0x0001c600, 0x0001c600, 0x0001c600, },
{ 0x1c5868, 0x409a4190, 0x409a4190, 0x409a4190, 0x409a4190, },
{ 0x1c586c, 0x050cb081, 0x050cb081, 0x050cb081, 0x050cb081, },
{ 0x1c5900, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c5904, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c5908, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c590c, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c5914, 0x000007d0, 0x000007d0, 0x00000898, 0x00000898, },
{ 0x1c5918, 0x00000118, 0x00000230, 0x00000268, 0x00000134, },
{ 0x1c591c, 0x10000fff, 0x10000fff, 0x10000fff, 0x10000fff, },
{ 0x1c5920, 0x0510081c, 0x0510081c, 0x0510001c, 0x0510001c, },
{ 0x1c5924, 0xd0058a15, 0xd0058a15, 0xd0058a15, 0xd0058a15, },
{ 0x1c5928, 0x00000001, 0x00000001, 0x00000001, 0x00000001, },
{ 0x1c592c, 0x00000004, 0x00000004, 0x00000004, 0x00000004, },
{ 0x1c5934, 0x3f3f3f3f, 0x3f3f3f3f, 0x3f3f3f3f, 0x3f3f3f3f, },
{ 0x1c5938, 0x3f3f3f3f, 0x3f3f3f3f, 0x3f3f3f3f, 0x3f3f3f3f, },
{ 0x1c593c, 0x0000007f, 0x0000007f, 0x0000007f, 0x0000007f, },
{ 0x1c5944, 0xdfb81020, 0xdfb81020, 0xdfb81020, 0xdfb81020, },
{ 0x1c5948, 0x9280b212, 0x9280b212, 0x9280b212, 0x9280b212, },
{ 0x1c594c, 0x00020028, 0x00020028, 0x00020028, 0x00020028, },
{ 0x1c5954, 0x5d50e188, 0x5d50e188, 0x5d50e188, 0x5d50e188, },
{ 0x1c5958, 0x00081fff, 0x00081fff, 0x00081fff, 0x00081fff, },
{ 0x1c5960, 0x00009b40, 0x00009b40, 0x00009b40, 0x00009b40, },
{ 0x1c5964, 0x00001120, 0x00001120, 0x00001120, 0x00001120, },
{ 0x1c5970, 0x190fb515, 0x190fb515, 0x190fb515, 0x190fb515, },
{ 0x1c5974, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c5978, 0x00000001, 0x00000001, 0x00000001, 0x00000001, },
{ 0x1c597c, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c5980, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c5984, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c5988, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c598c, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c5990, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c5994, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c5998, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c599c, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c59a0, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c59a4, 0x00000007, 0x00000007, 0x00000007, 0x00000007, },
{ 0x1c59a8, 0x001fff00, 0x001fff00, 0x001fff00, 0x001fff00, },
{ 0x1c59ac, 0x006f00c4, 0x006f00c4, 0x006f00c4, 0x006f00c4, },
{ 0x1c59b0, 0x03051000, 0x03051000, 0x03051000, 0x03051000, },
{ 0x1c59b4, 0x00000820, 0x00000820, 0x00000820, 0x00000820, },
{ 0x1c59bc, 0x00181400, 0x00181400, 0x00181400, 0x00181400, },
{ 0x1c59c0, 0x038919be, 0x038919be, 0x038919be, 0x038919be, },
{ 0x1c59c4, 0x06336f77, 0x06336f77, 0x06336f77, 0x06336f77, },
{ 0x1c59c8, 0x6af6532c, 0x6af6532c, 0x6af6532c, 0x6af6532c, },
{ 0x1c59cc, 0x08f186c8, 0x08f186c8, 0x08f186c8, 0x08f186c8, },
{ 0x1c59d0, 0x00046384, 0x00046384, 0x00046384, 0x00046384, },
{ 0x1c59d4, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c59d8, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c59dc, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c59e0, 0x00000200, 0x00000200, 0x00000200, 0x00000200, },
{ 0x1c59e4, 0x64646464, 0x64646464, 0x64646464, 0x64646464, },
{ 0x1c59e8, 0x3c787878, 0x3c787878, 0x3c787878, 0x3c787878, },
{ 0x1c59ec, 0x000000aa, 0x000000aa, 0x000000aa, 0x000000aa, },
{ 0x1c59f0, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c59fc, 0x00001042, 0x00001042, 0x00001042, 0x00001042, },
{ 0x1c5a00, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c5a04, 0x00000040, 0x00000040, 0x00000040, 0x00000040, },
{ 0x1c5a08, 0x00000080, 0x00000080, 0x00000080, 0x00000080, },
{ 0x1c5a0c, 0x000001a1, 0x000001a1, 0x00000141, 0x00000141, },
{ 0x1c5a10, 0x000001e1, 0x000001e1, 0x00000181, 0x00000181, },
{ 0x1c5a14, 0x00000021, 0x00000021, 0x000001c1, 0x000001c1, },
{ 0x1c5a18, 0x00000061, 0x00000061, 0x00000001, 0x00000001, },
{ 0x1c5a1c, 0x00000168, 0x00000168, 0x00000041, 0x00000041, },
{ 0x1c5a20, 0x000001a8, 0x000001a8, 0x000001a8, 0x000001a8, },
{ 0x1c5a24, 0x000001e8, 0x000001e8, 0x000001e8, 0x000001e8, },
{ 0x1c5a28, 0x00000028, 0x00000028, 0x00000028, 0x00000028, },
{ 0x1c5a2c, 0x00000068, 0x00000068, 0x00000068, 0x00000068, },
{ 0x1c5a30, 0x00000189, 0x00000189, 0x000000a8, 0x000000a8, },
{ 0x1c5a34, 0x000001c9, 0x000001c9, 0x00000169, 0x00000169, },
{ 0x1c5a38, 0x00000009, 0x00000009, 0x000001a9, 0x000001a9, },
{ 0x1c5a3c, 0x00000049, 0x00000049, 0x000001e9, 0x000001e9, },
{ 0x1c5a40, 0x00000089, 0x00000089, 0x00000029, 0x00000029, },
{ 0x1c5a44, 0x00000170, 0x00000170, 0x00000069, 0x00000069, },
{ 0x1c5a48, 0x000001b0, 0x000001b0, 0x00000190, 0x00000190, },
{ 0x1c5a4c, 0x000001f0, 0x000001f0, 0x000001d0, 0x000001d0, },
{ 0x1c5a50, 0x00000030, 0x00000030, 0x00000010, 0x00000010, },
{ 0x1c5a54, 0x00000070, 0x00000070, 0x00000050, 0x00000050, },
{ 0x1c5a58, 0x00000191, 0x00000191, 0x00000090, 0x00000090, },
{ 0x1c5a5c, 0x000001d1, 0x000001d1, 0x00000151, 0x00000151, },
{ 0x1c5a60, 0x00000011, 0x00000011, 0x00000191, 0x00000191, },
{ 0x1c5a64, 0x00000051, 0x00000051, 0x000001d1, 0x000001d1, },
{ 0x1c5a68, 0x00000091, 0x00000091, 0x00000011, 0x00000011, },
{ 0x1c5a6c, 0x000001b8, 0x000001b8, 0x00000051, 0x00000051, },
{ 0x1c5a70, 0x000001f8, 0x000001f8, 0x00000198, 0x00000198, },
{ 0x1c5a74, 0x00000038, 0x00000038, 0x000001d8, 0x000001d8, },
{ 0x1c5a78, 0x00000078, 0x00000078, 0x00000018, 0x00000018, },
{ 0x1c5a7c, 0x00000199, 0x00000199, 0x00000058, 0x00000058, },
{ 0x1c5a80, 0x000001d9, 0x000001d9, 0x00000098, 0x00000098, },
{ 0x1c5a84, 0x00000019, 0x00000019, 0x00000159, 0x00000159, },
{ 0x1c5a88, 0x00000059, 0x00000059, 0x00000199, 0x00000199, },
{ 0x1c5a8c, 0x00000099, 0x00000099, 0x000001d9, 0x000001d9, },
{ 0x1c5a90, 0x000000d9, 0x000000d9, 0x00000019, 0x00000019, },
{ 0x1c5a94, 0x000000f9, 0x000000f9, 0x00000059, 0x00000059, },
{ 0x1c5a98, 0x000000f9, 0x000000f9, 0x00000099, 0x00000099, },
{ 0x1c5a9c, 0x000000f9, 0x000000f9, 0x000000d9, 0x000000d9, },
{ 0x1c5aa0, 0x000000f9, 0x000000f9, 0x000000f9, 0x000000f9, },
{ 0x1c5aa4, 0x000000f9, 0x000000f9, 0x000000f9, 0x000000f9, },
{ 0x1c5aa8, 0x000000f9, 0x000000f9, 0x000000f9, 0x000000f9, },
{ 0x1c5aac, 0x000000f9, 0x000000f9, 0x000000f9, 0x000000f9, },
{ 0x1c5ab0, 0x000000f9, 0x000000f9, 0x000000f9, 0x000000f9, },
{ 0x1c5ab4, 0x000000f9, 0x000000f9, 0x000000f9, 0x000000f9, },
{ 0x1c5ab8, 0x000000f9, 0x000000f9, 0x000000f9, 0x000000f9, },
{ 0x1c5abc, 0x000000f9, 0x000000f9, 0x000000f9, 0x000000f9, },
{ 0x1c5ac0, 0x000000f9, 0x000000f9, 0x000000f9, 0x000000f9, },
{ 0x1c5ac4, 0x000000f9, 0x000000f9, 0x000000f9, 0x000000f9, },
{ 0x1c5ac8, 0x000000f9, 0x000000f9, 0x000000f9, 0x000000f9, },
{ 0x1c5acc, 0x000000f9, 0x000000f9, 0x000000f9, 0x000000f9, },
{ 0x1c5ad0, 0x000000f9, 0x000000f9, 0x000000f9, 0x000000f9, },
{ 0x1c5ad4, 0x000000f9, 0x000000f9, 0x000000f9, 0x000000f9, },
{ 0x1c5ad8, 0x000000f9, 0x000000f9, 0x000000f9, 0x000000f9, },
{ 0x1c5adc, 0x000000f9, 0x000000f9, 0x000000f9, 0x000000f9, },
{ 0x1c5ae0, 0x000000f9, 0x000000f9, 0x000000f9, 0x000000f9, },
{ 0x1c5ae4, 0x000000f9, 0x000000f9, 0x000000f9, 0x000000f9, },
{ 0x1c5ae8, 0x000000f9, 0x000000f9, 0x000000f9, 0x000000f9, },
{ 0x1c5aec, 0x000000f9, 0x000000f9, 0x000000f9, 0x000000f9, },
{ 0x1c5af0, 0x000000f9, 0x000000f9, 0x000000f9, 0x000000f9, },
{ 0x1c5af4, 0x000000f9, 0x000000f9, 0x000000f9, 0x000000f9, },
{ 0x1c5af8, 0x000000f9, 0x000000f9, 0x000000f9, 0x000000f9, },
{ 0x1c5afc, 0x000000f9, 0x000000f9, 0x000000f9, 0x000000f9, },
{ 0x1c5b00, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c5b04, 0x00000001, 0x00000001, 0x00000001, 0x00000001, },
{ 0x1c5b08, 0x00000002, 0x00000002, 0x00000002, 0x00000002, },
{ 0x1c5b0c, 0x00000003, 0x00000003, 0x00000003, 0x00000003, },
{ 0x1c5b10, 0x00000004, 0x00000004, 0x00000004, 0x00000004, },
{ 0x1c5b14, 0x00000005, 0x00000005, 0x00000005, 0x00000005, },
{ 0x1c5b18, 0x00000008, 0x00000008, 0x00000008, 0x00000008, },
{ 0x1c5b1c, 0x00000009, 0x00000009, 0x00000009, 0x00000009, },
{ 0x1c5b20, 0x0000000a, 0x0000000a, 0x0000000a, 0x0000000a, },
{ 0x1c5b24, 0x0000000b, 0x0000000b, 0x0000000b, 0x0000000b, },
{ 0x1c5b28, 0x0000000c, 0x0000000c, 0x0000000c, 0x0000000c, },
{ 0x1c5b2c, 0x0000000d, 0x0000000d, 0x0000000d, 0x0000000d, },
{ 0x1c5b30, 0x00000010, 0x00000010, 0x00000010, 0x00000010, },
{ 0x1c5b34, 0x00000011, 0x00000011, 0x00000011, 0x00000011, },
{ 0x1c5b38, 0x00000012, 0x00000012, 0x00000012, 0x00000012, },
{ 0x1c5b3c, 0x00000013, 0x00000013, 0x00000013, 0x00000013, },
{ 0x1c5b40, 0x00000014, 0x00000014, 0x00000014, 0x00000014, },
{ 0x1c5b44, 0x00000015, 0x00000015, 0x00000015, 0x00000015, },
{ 0x1c5b48, 0x00000018, 0x00000018, 0x00000018, 0x00000018, },
{ 0x1c5b4c, 0x00000019, 0x00000019, 0x00000019, 0x00000019, },
{ 0x1c5b50, 0x0000001a, 0x0000001a, 0x0000001a, 0x0000001a, },
{ 0x1c5b54, 0x0000001b, 0x0000001b, 0x0000001b, 0x0000001b, },
{ 0x1c5b58, 0x0000001c, 0x0000001c, 0x0000001c, 0x0000001c, },
{ 0x1c5b5c, 0x0000001d, 0x0000001d, 0x0000001d, 0x0000001d, },
{ 0x1c5b60, 0x00000020, 0x00000020, 0x00000020, 0x00000020, },
{ 0x1c5b64, 0x00000021, 0x00000021, 0x00000021, 0x00000021, },
{ 0x1c5b68, 0x00000022, 0x00000022, 0x00000022, 0x00000022, },
{ 0x1c5b6c, 0x00000023, 0x00000023, 0x00000023, 0x00000023, },
{ 0x1c5b70, 0x00000024, 0x00000024, 0x00000024, 0x00000024, },
{ 0x1c5b74, 0x00000025, 0x00000025, 0x00000025, 0x00000025, },
{ 0x1c5b78, 0x00000028, 0x00000028, 0x00000028, 0x00000028, },
{ 0x1c5b7c, 0x00000029, 0x00000029, 0x00000029, 0x00000029, },
{ 0x1c5b80, 0x0000002a, 0x0000002a, 0x0000002a, 0x0000002a, },
{ 0x1c5b84, 0x0000002b, 0x0000002b, 0x0000002b, 0x0000002b, },
{ 0x1c5b88, 0x0000002c, 0x0000002c, 0x0000002c, 0x0000002c, },
{ 0x1c5b8c, 0x0000002d, 0x0000002d, 0x0000002d, 0x0000002d, },
{ 0x1c5b90, 0x00000030, 0x00000030, 0x00000030, 0x00000030, },
{ 0x1c5b94, 0x00000031, 0x00000031, 0x00000031, 0x00000031, },
{ 0x1c5b98, 0x00000032, 0x00000032, 0x00000032, 0x00000032, },
{ 0x1c5b9c, 0x00000033, 0x00000033, 0x00000033, 0x00000033, },
{ 0x1c5ba0, 0x00000034, 0x00000034, 0x00000034, 0x00000034, },
{ 0x1c5ba4, 0x00000035, 0x00000035, 0x00000035, 0x00000035, },
{ 0x1c5ba8, 0x00000035, 0x00000035, 0x00000035, 0x00000035, },
{ 0x1c5bac, 0x00000035, 0x00000035, 0x00000035, 0x00000035, },
{ 0x1c5bb0, 0x00000035, 0x00000035, 0x00000035, 0x00000035, },
{ 0x1c5bb4, 0x00000035, 0x00000035, 0x00000035, 0x00000035, },
{ 0x1c5bb8, 0x00000035, 0x00000035, 0x00000035, 0x00000035, },
{ 0x1c5bbc, 0x00000035, 0x00000035, 0x00000035, 0x00000035, },
{ 0x1c5bc0, 0x00000035, 0x00000035, 0x00000035, 0x00000035, },
{ 0x1c5bc4, 0x00000035, 0x00000035, 0x00000035, 0x00000035, },
{ 0x1c5bc8, 0x00000035, 0x00000035, 0x00000035, 0x00000035, },
{ 0x1c5bcc, 0x00000035, 0x00000035, 0x00000035, 0x00000035, },
{ 0x1c5bd0, 0x00000035, 0x00000035, 0x00000035, 0x00000035, },
{ 0x1c5bd4, 0x00000035, 0x00000035, 0x00000035, 0x00000035, },
{ 0x1c5bd8, 0x00000035, 0x00000035, 0x00000035, 0x00000035, },
{ 0x1c5bdc, 0x00000035, 0x00000035, 0x00000035, 0x00000035, },
{ 0x1c5be0, 0x00000035, 0x00000035, 0x00000035, 0x00000035, },
{ 0x1c5be4, 0x00000035, 0x00000035, 0x00000035, 0x00000035, },
{ 0x1c5be8, 0x00000035, 0x00000035, 0x00000035, 0x00000035, },
{ 0x1c5bec, 0x00000035, 0x00000035, 0x00000035, 0x00000035, },
{ 0x1c5bf0, 0x00000035, 0x00000035, 0x00000035, 0x00000035, },
{ 0x1c5bf4, 0x00000035, 0x00000035, 0x00000035, 0x00000035, },
{ 0x1c5bf8, 0x00000010, 0x00000010, 0x00000010, 0x00000010, },
{ 0x1c5bfc, 0x0000001a, 0x0000001a, 0x0000001a, 0x0000001a, },
{ 0x1c5c00, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c5c0c, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c5c10, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c5c14, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c5c18, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c5c1c, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c5c20, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c5c24, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c5c28, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c5c2c, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c5c30, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c5c34, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c5c38, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c5c3c, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c5cf0, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c5cf4, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c5cf8, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c5cfc, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c6200, 0x00000008, 0x00000008, 0x0000000e, 0x0000000e, },
{ 0x1c6204, 0x00000440, 0x00000440, 0x00000440, 0x00000440, },
{ 0x1c6208, 0xd6be4788, 0xd6be4788, 0xd03e4788, 0xd03e4788, },
{ 0x1c620c, 0x012e8160, 0x012e8160, 0x012a8160, 0x012a8160, },
{ 0x1c6210, 0x40806333, 0x40806333, 0x40806333, 0x40806333, },
{ 0x1c6214, 0x00106c10, 0x00106c10, 0x00106c10, 0x00106c10, },
{ 0x1c6218, 0x009c4060, 0x009c4060, 0x009c4060, 0x009c4060, },
{ 0x1c621c, 0x1883800a, 0x1883800a, 0x1883800a, 0x1883800a, },
{ 0x1c6220, 0x018830c6, 0x018830c6, 0x018830c6, 0x018830c6, },
{ 0x1c6224, 0x00000400, 0x00000400, 0x00000400, 0x00000400, },
{ 0x1c6228, 0x000009b5, 0x000009b5, 0x000009b5, 0x000009b5, },
{ 0x1c622c, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c6230, 0x00000108, 0x00000210, 0x00000210, 0x00000108, },
{ 0x1c6234, 0x3f3f3f3f, 0x3f3f3f3f, 0x3f3f3f3f, 0x3f3f3f3f, },
{ 0x1c6238, 0x3f3f3f3f, 0x3f3f3f3f, 0x3f3f3f3f, 0x3f3f3f3f, },
{ 0x1c623c, 0x13c889af, 0x13c889af, 0x13c889af, 0x13c889af, },
{ 0x1c6240, 0x38490a20, 0x38490a20, 0x38490a20, 0x38490a20, },
{ 0x1c6244, 0x00007bb6, 0x00007bb6, 0x00007bb6, 0x00007bb6, },
{ 0x1c6248, 0x0fff3ffc, 0x0fff3ffc, 0x0fff3ffc, 0x0fff3ffc, },
{ 0x1c624c, 0x00000001, 0x00000001, 0x00000001, 0x00000001, },
{ 0x1c6250, 0x0000a000, 0x0000a000, 0x0000a000, 0x0000a000, },
{ 0x1c6254, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c6258, 0x0cc75380, 0x0cc75380, 0x0cc75380, 0x0cc75380, },
{ 0x1c625c, 0x0f0f0f01, 0x0f0f0f01, 0x0f0f0f01, 0x0f0f0f01, },
{ 0x1c6260, 0xdfa91f01, 0xdfa91f01, 0xdfa91f01, 0xdfa91f01, },
{ 0x1c6264, 0x00418a11, 0x00418a11, 0x00418a11, 0x00418a11, },
{ 0x1c6268, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c626c, 0x09249126, 0x09249126, 0x09249126, 0x09249126, },
{ 0x1c6274, 0x0a1a9caa, 0x0a1a9caa, 0x0a1a7caa, 0x0a1a7caa, },
{ 0x1c6278, 0x1ce739ce, 0x1ce739ce, 0x1ce739ce, 0x1ce739ce, },
{ 0x1c627c, 0x051701ce, 0x051701ce, 0x051701ce, 0x051701ce, },
{ 0x1c6300, 0x18010000, 0x18010000, 0x18010000, 0x18010000, },
{ 0x1c6304, 0x30032602, 0x30032602, 0x2e032402, 0x2e032402, },
{ 0x1c6308, 0x48073e06, 0x48073e06, 0x4a0a3c06, 0x4a0a3c06, },
{ 0x1c630c, 0x560b4c0a, 0x560b4c0a, 0x621a540b, 0x621a540b, },
{ 0x1c6310, 0x641a600f, 0x641a600f, 0x764f6c1b, 0x764f6c1b, },
{ 0x1c6314, 0x7a4f6e1b, 0x7a4f6e1b, 0x845b7a5a, 0x845b7a5a, },
{ 0x1c6318, 0x8c5b7e5a, 0x8c5b7e5a, 0x950f8ccf, 0x950f8ccf, },
{ 0x1c631c, 0x9d0f96cf, 0x9d0f96cf, 0xa5cf9b4f, 0xa5cf9b4f, },
{ 0x1c6320, 0xb51fa69f, 0xb51fa69f, 0xbddfaf1f, 0xbddfaf1f, },
{ 0x1c6324, 0xcb3fbd07, 0xcb3fbcbf, 0xd1ffc93f, 0xd1ffc93f, },
{ 0x1c6328, 0x0000d7bf, 0x0000d7bf, 0x00000000, 0x00000000, },
{ 0x1c632c, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c6330, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c6334, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c6338, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c633c, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c6340, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c6344, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c6348, 0x3fffffff, 0x3fffffff, 0x3fffffff, 0x3fffffff, },
{ 0x1c634c, 0x3fffffff, 0x3fffffff, 0x3fffffff, 0x3fffffff, },
{ 0x1c6350, 0x3fffffff, 0x3fffffff, 0x3fffffff, 0x3fffffff, },
{ 0x1c6354, 0x0003ffff, 0x0003ffff, 0x0003ffff, 0x0003ffff, },
{ 0x1c6358, 0x79a8aa1f, 0x79a8aa1f, 0x79a8aa1f, 0x79a8aa1f, },
{ 0x1c6388, 0x08000000, 0x08000000, 0x08000000, 0x08000000, },
{ 0x1c638c, 0x3f3f3f3f, 0x3f3f3f3f, 0x3f3f3f3f, 0x3f3f3f3f, },
{ 0x1c6390, 0x3f3f3f3f, 0x3f3f3f3f, 0x3f3f3f3f, 0x3f3f3f3f, },
{ 0x1c6394, 0x1ce739ce, 0x1ce739ce, 0x1ce739ce, 0x1ce739ce, },
{ 0x1c6398, 0x000001ce, 0x000001ce, 0x000001ce, 0x000001ce, },
{ 0x1c639c, 0x00000007, 0x00000007, 0x00000007, 0x00000007, },
{ 0x1c63a0, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c63a4, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c63a8, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c63ac, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c63b0, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c63b4, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c63b8, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c63bc, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c63c0, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c63c4, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c63c8, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c63cc, 0x3f3f3f3f, 0x3f3f3f3f, 0x3f3f3f3f, 0x3f3f3f3f, },
{ 0x1c63d0, 0x3f3f3f3f, 0x3f3f3f3f, 0x3f3f3f3f, 0x3f3f3f3f, },
{ 0x1c63d4, 0x3f3f3f3f, 0x3f3f3f3f, 0x3f3f3f3f, 0x3f3f3f3f, },
{ 0x1c63d8, 0x00000000, 0x00000000, 0x00000000, 0x00000000, },
{ 0x1c63dc, 0x1ce739ce, 0x1ce739ce, 0x1ce739ce, 0x1ce739ce, },
{ 0x1c63e0, 0x000000c0, 0x000000c0, 0x000000c0, 0x000000c0, },
{ 0x1c6848, 0x00180a65, 0x00180a65, 0x00180a68, 0x00180a68, },
{ 0x1c6920, 0x0510001c, 0x0510001c, 0x0510001c, 0x0510001c, },
{ 0x1c6960, 0x00009b40, 0x00009b40, 0x00009b40, 0x00009b40, },
{ 0x1c720c, 0x012e8160, 0x012e8160, 0x012a8160, 0x012a8160, },
{ 0x1c726c, 0x09249126, 0x09249126, 0x09249126, 0x09249126, },
{ 0x1c7848, 0x00180a65, 0x00180a65, 0x00180a68, 0x00180a68, },
{ 0x1c7920, 0x0510001c, 0x0510001c, 0x0510001c, 0x0510001c, },
{ 0x1c7960, 0x00009b40, 0x00009b40, 0x00009b40, 0x00009b40, },
{ 0x1c820c, 0x012e8160, 0x012e8160, 0x012a8160, 0x012a8160, },
{ 0x1c826c, 0x09249126, 0x09249126, 0x09249126, 0x09249126, },
/*	{ 0x1c8864, 0x0001ce00, 0x0001ce00, 0x0001ce00, 0x0001ce00, }, */
	{ 0x1c8864, 0x0001c600, 0x0001c600, 0x0001c600, 0x0001c600, },
	{ 0x1c895c, 0x004b6a8e, 0x004b6a8e, 0x004b6a8e, 0x004b6a8e, },
	{ 0x1c8968, 0x000003ce, 0x000003ce, 0x000003ce, 0x000003ce, },
	{ 0x1c89bc, 0x00181400, 0x00181400, 0x00181400, 0x00181400, },
	{ 0x1c9270, 0x00820820, 0x00820820, 0x00820820, 0x00820820, },
	{ 0x1c935c, 0x066c420f, 0x066c420f, 0x066c420f, 0x066c420f, },
	{ 0x1c9360, 0x0f282207, 0x0f282207, 0x0f282207, 0x0f282207, },
	{ 0x1c9364, 0x17601685, 0x17601685, 0x17601685, 0x17601685, },
	{ 0x1c9368, 0x1f801104, 0x1f801104, 0x1f801104, 0x1f801104, },
	{ 0x1c936c, 0x37a00c03, 0x37a00c03, 0x37a00c03, 0x37a00c03, },
	{ 0x1c9370, 0x3fc40883, 0x3fc40883, 0x3fc40883, 0x3fc40883, },
	{ 0x1c9374, 0x57c00803, 0x57c00803, 0x57c00803, 0x57c00803, },
	{ 0x1c9378, 0x5fd80682, 0x5fd80682, 0x5fd80682, 0x5fd80682, },
	{ 0x1c937c, 0x7fe00482, 0x7fe00482, 0x7fe00482, 0x7fe00482, },
	{ 0x1c9380, 0x7f3c7bba, 0x7f3c7bba, 0x7f3c7bba, 0x7f3c7bba, },
	{ 0x1c9384, 0xf3307ff0, 0xf3307ff0, 0xf3307ff0, 0xf3307ff0, }
};

enum ar9170_bw {
	CARL9170_BW_20,
	CARL9170_BW_40_BELOW,
	CARL9170_BW_40_ABOVE,

	__CARL9170_NUM_BW,
};

struct ar9170_phy_freq_params {
	U8 coeff_exp;
	U16 coeff_man;
	U8 coeff_exp_shgi;
	U16 coeff_man_shgi;
};

struct ar9170_phy_freq_entry {
	U16 freq;
	struct ar9170_phy_freq_params params[__CARL9170_NUM_BW];
};

/* NB: must be in sync with channel tables in main! */
static const struct ar9170_phy_freq_entry ar9170_phy_freq_params[] = {
/*
 *	freq,
 *		20MHz,
 *		40MHz (below),
 *		40Mhz (above),
 */
	{ 2412, {
		{ 3, 21737, 3, 19563, },
		{ 3, 21827, 3, 19644, },
		{ 3, 21647, 3, 19482, },
	} },
	{ 2417, {
		{ 3, 21692, 3, 19523, },
		{ 3, 21782, 3, 19604, },
		{ 3, 21602, 3, 19442, },
	} },
	{ 2422, {
		{ 3, 21647, 3, 19482, },
		{ 3, 21737, 3, 19563, },
		{ 3, 21558, 3, 19402, },
	} },
	{ 2427, {
		{ 3, 21602, 3, 19442, },
		{ 3, 21692, 3, 19523, },
		{ 3, 21514, 3, 19362, },
	} },
	{ 2432, {
		{ 3, 21558, 3, 19402, },
		{ 3, 21647, 3, 19482, },
		{ 3, 21470, 3, 19323, },
	} },
	{ 2437, {
		{ 3, 21514, 3, 19362, },
		{ 3, 21602, 3, 19442, },
		{ 3, 21426, 3, 19283, },
	} },
	{ 2442, {
		{ 3, 21470, 3, 19323, },
		{ 3, 21558, 3, 19402, },
		{ 3, 21382, 3, 19244, },
	} },
	{ 2447, {
		{ 3, 21426, 3, 19283, },
		{ 3, 21514, 3, 19362, },
		{ 3, 21339, 3, 19205, },
	} },
	{ 2452, {
		{ 3, 21382, 3, 19244, },
		{ 3, 21470, 3, 19323, },
		{ 3, 21295, 3, 19166, },
	} },
	{ 2457, {
		{ 3, 21339, 3, 19205, },
		{ 3, 21426, 3, 19283, },
		{ 3, 21252, 3, 19127, },
	} },
	{ 2462, {
		{ 3, 21295, 3, 19166, },
		{ 3, 21382, 3, 19244, },
		{ 3, 21209, 3, 19088, },
	} },
	{ 2467, {
		{ 3, 21252, 3, 19127, },
		{ 3, 21339, 3, 19205, },
		{ 3, 21166, 3, 19050, },
	} },
	{ 2472, {
		{ 3, 21209, 3, 19088, },
		{ 3, 21295, 3, 19166, },
		{ 3, 21124, 3, 19011, },
	} },
	{ 2484, {
		{ 3, 21107, 3, 18996, },
		{ 3, 21192, 3, 19073, },
		{ 3, 21022, 3, 18920, },
	} },
	{ 4920, {
		{ 4, 21313, 4, 19181, },
		{ 4, 21356, 4, 19220, },
		{ 4, 21269, 4, 19142, },
	} },
	{ 4940, {
		{ 4, 21226, 4, 19104, },
		{ 4, 21269, 4, 19142, },
		{ 4, 21183, 4, 19065, },
	} },
	{ 4960, {
		{ 4, 21141, 4, 19027, },
		{ 4, 21183, 4, 19065, },
		{ 4, 21098, 4, 18988, },
	} },
	{ 4980, {
		{ 4, 21056, 4, 18950, },
		{ 4, 21098, 4, 18988, },
		{ 4, 21014, 4, 18912, },
	} },
	{ 5040, {
		{ 4, 20805, 4, 18725, },
		{ 4, 20846, 4, 18762, },
		{ 4, 20764, 4, 18687, },
	} },
	{ 5060, {
		{ 4, 20723, 4, 18651, },
		{ 4, 20764, 4, 18687, },
		{ 4, 20682, 4, 18614, },
	} },
	{ 5080, {
		{ 4, 20641, 4, 18577, },
		{ 4, 20682, 4, 18614, },
		{ 4, 20601, 4, 18541, },
	} },
	{ 5180, {
		{ 4, 20243, 4, 18219, },
		{ 4, 20282, 4, 18254, },
		{ 4, 20204, 4, 18183, },
	} },
	{ 5200, {
		{ 4, 20165, 4, 18148, },
		{ 4, 20204, 4, 18183, },
		{ 4, 20126, 4, 18114, },
	} },
	{ 5220, {
		{ 4, 20088, 4, 18079, },
		{ 4, 20126, 4, 18114, },
		{ 4, 20049, 4, 18044, },
	} },
	{ 5240, {
		{ 4, 20011, 4, 18010, },
		{ 4, 20049, 4, 18044, },
		{ 4, 19973, 4, 17976, },
	} },
	{ 5260, {
		{ 4, 19935, 4, 17941, },
		{ 4, 19973, 4, 17976, },
		{ 4, 19897, 4, 17907, },
	} },
	{ 5280, {
		{ 4, 19859, 4, 17873, },
		{ 4, 19897, 4, 17907, },
		{ 4, 19822, 4, 17840, },
	} },
	{ 5300, {
		{ 4, 19784, 4, 17806, },
		{ 4, 19822, 4, 17840, },
		{ 4, 19747, 4, 17772, },
	} },
	{ 5320, {
		{ 4, 19710, 4, 17739, },
		{ 4, 19747, 4, 17772, },
		{ 4, 19673, 4, 17706, },
	} },
	{ 5500, {
		{ 4, 19065, 4, 17159, },
		{ 4, 19100, 4, 17190, },
		{ 4, 19030, 4, 17127, },
	} },
	{ 5520, {
		{ 4, 18996, 4, 17096, },
		{ 4, 19030, 4, 17127, },
		{ 4, 18962, 4, 17065, },
	} },
	{ 5540, {
		{ 4, 18927, 4, 17035, },
		{ 4, 18962, 4, 17065, },
		{ 4, 18893, 4, 17004, },
	} },
	{ 5560, {
		{ 4, 18859, 4, 16973, },
		{ 4, 18893, 4, 17004, },
		{ 4, 18825, 4, 16943, },
	} },
	{ 5580, {
		{ 4, 18792, 4, 16913, },
		{ 4, 18825, 4, 16943, },
		{ 4, 18758, 4, 16882, },
	} },
	{ 5600, {
		{ 4, 18725, 4, 16852, },
		{ 4, 18758, 4, 16882, },
		{ 4, 18691, 4, 16822, },
	} },
	{ 5620, {
		{ 4, 18658, 4, 16792, },
		{ 4, 18691, 4, 16822, },
		{ 4, 18625, 4, 16762, },
	} },
	{ 5640, {
		{ 4, 18592, 4, 16733, },
		{ 4, 18625, 4, 16762, },
		{ 4, 18559, 4, 16703, },
	} },
	{ 5660, {
		{ 4, 18526, 4, 16673, },
		{ 4, 18559, 4, 16703, },
		{ 4, 18493, 4, 16644, },
	} },
	{ 5680, {
		{ 4, 18461, 4, 16615, },
		{ 4, 18493, 4, 16644, },
		{ 4, 18428, 4, 16586, },
	} },
	{ 5700, {
		{ 4, 18396, 4, 16556, },
		{ 4, 18428, 4, 16586, },
		{ 4, 18364, 4, 16527, },
	} },
	{ 5745, {
		{ 4, 18252, 4, 16427, },
		{ 4, 18284, 4, 16455, },
		{ 4, 18220, 4, 16398, },
	} },
	{ 5765, {
		{ 4, 18189, 5, 32740, },
		{ 4, 18220, 4, 16398, },
		{ 4, 18157, 5, 32683, },
	} },
	{ 5785, {
		{ 4, 18126, 5, 32626, },
		{ 4, 18157, 5, 32683, },
		{ 4, 18094, 5, 32570, },
	} },
	{ 5805, {
		{ 4, 18063, 5, 32514, },
		{ 4, 18094, 5, 32570, },
		{ 4, 18032, 5, 32458, },
	} },
	{ 5825, {
		{ 4, 18001, 5, 32402, },
		{ 4, 18032, 5, 32458, },
		{ 4, 17970, 5, 32347, },
	} },
	{ 5170, {
		{ 4, 20282, 4, 18254, },
		{ 4, 20321, 4, 18289, },
		{ 4, 20243, 4, 18219, },
	} },
	{ 5190, {
		{ 4, 20204, 4, 18183, },
		{ 4, 20243, 4, 18219, },
		{ 4, 20165, 4, 18148, },
	} },
	{ 5210, {
		{ 4, 20126, 4, 18114, },
		{ 4, 20165, 4, 18148, },
		{ 4, 20088, 4, 18079, },
	} },
	{ 5230, {
		{ 4, 20049, 4, 18044, },
		{ 4, 20088, 4, 18079, },
		{ 4, 20011, 4, 18010, },
	} },
};



inline enum ar9170_bw nl80211_to_carl(enum nl80211_channel_type type)
{
	switch (type) {
		case NL80211_CHAN_NO_HT:
		case NL80211_CHAN_HT20:
			return CARL9170_BW_20;
		case NL80211_CHAN_HT40MINUS:
			return CARL9170_BW_40_BELOW;
		case NL80211_CHAN_HT40PLUS:
			return CARL9170_BW_40_ABOVE;
		default:
			printf("ERROR: Could not associate nl80211 channel type with local representation.\n");
			return -1; // FIXME Did this to suppress the warning on return
	}
}

/*
 * look up a certain register in ar5416_phy_init[] and return the init. value
 * for the band and bandwidth given. Return 0 if register address not found.
 */
static inline U32 ar9170_def_val(U32 reg, bool is_2ghz, bool is_40mhz)
{
	unsigned int i;
	for (i = 0; i < ARRAY_SIZE(ar5416_phy_init); i++) {
		if (ar5416_phy_init[i].reg != reg)
			continue;

		if (is_2ghz) {
			if (is_40mhz)
				return ar5416_phy_init[i]._2ghz_40;
			else
				return ar5416_phy_init[i]._2ghz_20;
		} else {
			if (is_40mhz)
				return ar5416_phy_init[i]._5ghz_40;
			else
				return ar5416_phy_init[i]._5ghz_20;
		}
	}
	return 0;
}

int ar9170_set_channel(struct ar9170 *ar, struct ieee80211_channel *channel, enum nl80211_channel_type _bw, enum ar9170_rf_init_mode rfi);
int ar9170_init_phy(struct ar9170 *ar, enum ieee80211_band band);
int ar9170_init_phy_from_eeprom(struct ar9170 *ar, bool is_2ghz, bool is_40mhz);
int ar9170_init_power_cal(struct ar9170 *ar);
int ar9170_init_rf_banks_0_7(struct ar9170 *ar, bool band5ghz);
int ar9170_init_rf_bank4_pwr(struct ar9170 *ar, bool band5ghz, U32 freq, enum ar9170_bw bw);
int ar9170_set_freq_cal_data(struct ar9170 *ar, struct ieee80211_channel *channel);
U8 ar9170_interpolate_u8(U8 x, U8 x1, U8 y1, U8 x2, U8 y2);
S32 ar9170_interpolate_s32(S32 x, S32 x1, S32 y1, S32 x2, S32 y2);
U8 ar9170_interpolate_val(U8 x, U8 *x_array, U8 *y_array);
void ar9170_set_power_cal(struct ar9170 *ar, U32 freq, enum ar9170_bw bw);
int ar9170_find_freq_idx(int nfreqs, U8 *freqs, U8 f);
void ar9170_calc_ctl(struct ar9170 *ar, U32 freq, enum ar9170_bw bw);
const struct ar9170_phy_freq_params * ar9170_get_hw_dyn_params(struct ieee80211_channel *channel, enum ar9170_bw bw);
U8 ar9170_get_max_edge_power(struct ar9170 *ar, U32 freq, struct ar9170_calctl_edges edges[]);
U8 ar9170_get_heavy_clip(struct ar9170 *ar, U32 freq, enum ar9170_bw bw, struct ar9170_calctl_edges edges[]);
int ar9170_get_noisefloor(struct ar9170 *ar);
#endif /* AR9170_PHY_H_ */
