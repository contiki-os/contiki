
.SUFFIXES:

define \n


endef

### Define the CPU directory
CONTIKI_CPU=$(CONTIKI)/cpu/arm/lpc1768

### Define the source files we have in the STM32W port

CONTIKI_CPU_DIRS = . 

STM32W_C = clock.c core_cm3.c lpc17xx_gpio.c lpc17xx_systick.c \
			lpc17xx_libcfg_default.c lpc17xx_timer.c lpc17xx_uart.c \
			 system_LPC17xx.c startup-LPC1768.c


# .s and .s79 not specified here because in Makefile.include only .c and .S suffixes are replaced with .o.
CONTIKI_TARGET_SOURCEFILES += $(STM32W_C) \
                              $(SYSAPPS) $(ELFLOADER) \
                              $(TARGETLIBS)

CONTIKI_SOURCEFILES        += $(CONTIKI_TARGET_SOURCEFILES)


# GCC
CC	 = arm-none-eabi-gcc
LD       = arm-none-eabi-gcc
AS	 = arm-none-eabi-gcc
NM	 = arm-none-eabi-nm
AR       = arm-none-eabi-ar
OBJCOPY  = arm-none-eabi-objcopy
STRIP    = arm-none-eabi-strip
SIZE     = arm-none-eabi-size

OPTI = -Os -ffunction-sections 

CFLAGSNO = -mthumb -mcpu=cortex-m3  \
			-g -Wall -Wno-strict-aliasing -mlittle-endian \
			-D CORTEXM3 -D DISABLE_WATCHDOG
			-D __SOURCEFILE__=\"$*.c\"
CFLAGS  += $(CFLAGSNO) $(OPTI)
ASFLAGS = -mthumb -mcpu=cortex-m3 -c -g -Wall -Os -ffunction-sections \
	    -mlittle-endian -fshort-enums -x assembler-with-cpp -Wa,-EL
LDFLAGS += -mcpu=cortex-m3 \
	    -mthumb  \
	    -Wl,-T -Xlinker $(CONTIKI_CPU)/lpc1768.ld \
	    -Wl,-static \
			-u Default_Handler \
	    -nostartfiles \
	    -Wl,-Map -Xlinker contiki-$(TARGET).map
	    
 # Do not use garbage collection when the elfloader is used.
 LDFLAGS += -Wl,--gc-sections
 
SIZEFLAGS = -A
OBJOPTS = -O binary
			

### Custom rules

OBJECTDIR = obj_$(TARGET)

ssubst = ${patsubst %.s,%.o,${patsubst %.s79,%.o,$(1)}}

CONTIKI_OBJECTFILES += ${addprefix $(OBJECTDIR)/,${call ssubst, $(STM32W_S)}}

$(OBJECTDIR)/%.o: %.s79
	$(AS) $(ASFLAGS) -o $@ $<
	
$(OBJECTDIR)/%.o: %.s
	$(AS) $(ASFLAGS) -o $@ $<	
	
%.bin: %.$(TARGET)
	$(OBJCOPY) $(OBJOPTS) $< $@ 

# a target that gives a user-friendly memory profile, taking into account the RAM
# that is statically occupied by the stack as defined in cpu/stm32w108/gnu.ld
RAM_SIZE = 8192
FLASH_SIZE = 128*1024
STACK_SIZE = 1280
%.size: %.$(TARGET)
	@size -A $< | egrep "data|bss" | awk '{s+=$$2} END {s=s+$(STACK_SIZE); f=$(RAM_SIZE)-s; printf "[RAM]   used %6d, free %6d\n",s,f;}'
	@size -A $< | egrep "text|isr_vector" | awk '{s+=$$2} END {f=$(FLASH_SIZE)-s; printf "[Flash] used %6d, free %6d\n",s,f;}'
